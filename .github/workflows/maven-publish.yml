name: Docker Image CI

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build1:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    # Build with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image
    - name: Build the Docker image
      run: docker build -t jangmin063/inkbridge-backend .

    # Push Docker image
    - name: Push Docker image
      run: docker push jangmin063/inkbridge-backend

    # Execute shell script  
    - name: Execute shell script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}         # 인스턴스 플로팅 ip
        username: ${{ secrets.SSH_ID }}     # user Id(testuser같은거)
        key: ${{ secrets.SSH_KEY }}         # user 개인키 <- begin부터 end까지 다
        port: ${{ secrets.SSH_PORT }}       # ssh 포트 = 22
        script_stop: true
        script: "./startup.sh"
        # Execute shell script  
    - name: Execute shell2 script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP2 }}         # 인스턴스 플로팅 ip
        username: ${{ secrets.SSH_ID }}     # user Id(testuser같은거)
        key: ${{ secrets.SSH_KEY }}         # user 개인키 <- begin부터 end까지 다
        port: ${{ secrets.SSH_PORT }}       # ssh 포트 = 22
        script_stop: true
        script: "./startup.sh"    
    # Run SonarQube
    - name: Run SonarQube
      run: mvn sonar:sonar -Dsonar.projectKey=github-action -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}
